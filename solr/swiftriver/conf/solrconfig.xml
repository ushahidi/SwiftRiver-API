<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--
 This is a stripped down config file used for a simple example...  
 It is *not* a good example to work from. 
-->
<config>
  <luceneMatchVersion>LUCENE_41</luceneMatchVersion>
  <!--  The DirectoryFactory to use for indexes.
        solr.StandardDirectoryFactory, the default, is filesystem based.
        solr.RAMDirectoryFactory is memory based, not persistent, and doesn't work with replication. -->
	<directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>

	<!--
  	These settings control low-level behaviour of indexing
    -->
	<indexConfig>
		<writeLockTimeout>1000</writeLockTimeout>
	</indexConfig>

	<updateHandler class="solr.DirectUpdateHandler2">

  	<!-- AutoCommit
  		Perform a hard commit automatically under certain conditions.
  		
  		maxTime - Maximum number of time in ms that is allowed to pass
  				  since a document was added before automatically
  				  triggering a new commit 
  	 -->
  	<autoCommit>
  		<maxTime>5000</maxTime>
  	</autoCommit>

	<!-- AutoSoftCommit
	
		softAutoCommit causes a 'soft' commit which only ensures that changes 
		are visible but does not ensure that data is synced to disk. This is
		faster and more near-realtime friendly than a hard commit 
	-->  	
  	<autoSoftCommit>
  		<maxTime>1000</maxTime>
  	</autoSoftCommit>

	</updateHandler>

	<!-- TermVectorComponent -->
	<searchComponent name="tvComponent" class="org.apache.solr.handler.component.TermVectorComponent" />
	
	<!-- Document duplication detection -->
	<updateRequestProcessorChain name="dedupe">
		<processor class="org.apache.solr.update.processor.SignatureUpdateProcessorFactory">
			<bool name="enabled">true</bool>
			<bool name="overwriteDupes">false</bool>
			<str name="fields">title,content</str>
			<str name="signatureField">signature</str>
			<str name="signatureClass">org.apache.solr.update.processor.TextProfileSignature</str>
		</processor>
		<processor class="solr.LogUpdateProcessorFactory"/>
		<processor class="solr.RunUpdateProcessorFactory"/>
	</updateRequestProcessorChain>

	<!-- realtime get handler, guaranteed to return the latest stored fields 
    of any document, without the need to commit or open a new searcher. The current 
    implementation relies on the updateLog feature being enabled. -->
	<requestHandler name="/get" class="solr.RealTimeGetHandler">
		<lst name="defaults">
			<str name="omitHeader">true</str>
		</lst>
	</requestHandler>
  
	<requestHandler name="/replication" class="solr.ReplicationHandler" startup="lazy" /> 

	<requestDispatcher handleSelect="true" >
		<requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
  	</requestDispatcher>
  
	<requestHandler name="standard" class="solr.StandardRequestHandler" default="true" />
	<requestHandler name="/analysis/field" startup="lazy" class="solr.FieldAnalysisRequestHandler" />
	<requestHandler name="/update" class="solr.UpdateRequestHandler">
		<lst name="defaults">
			<str name="update.chain">dedupe</str>
		</lst>
	</requestHandler>
	<requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />

	<requestHandler name="/admin/ping" class="solr.PingRequestHandler">
		<lst name="invariants">
			<str name="q">solrpingquery</str>
		</lst>
		<lst name="defaults">
			<str name="echoParams">all</str>
		</lst>
	</requestHandler>
	
	<requestHandler name="/select" class="solr.SearchHandler">
    <!-- default values for query parameters can be specified, these
         will be overridden by parameters in the request
      -->
		<lst name="defaults">
			<str name="echoParams">explicit</str>
			<int name="rows">20</int>
			<str name="df">text</str>
			<bool name="tv">false</bool>
		</lst>
		<arr name="last-components">
			<str>tvComponent</str>
		</arr>
	</requestHandler>

	<!-- config for the admin interface --> 
  	<admin>
  		<defaultQuery>solr</defaultQuery>
  	</admin>

</config>